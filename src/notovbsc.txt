	case menu_idle:
		if(BTN_PRESSED(BTN_PWR)){
			m_countdown = 27; // 3 sec
			menustate = menu_power_down_wait;
		} else if(_buttons && eeprom_read_config(EEADR_POWER_ON)){
			if (BTN_PRESSED(BTN_UP | BTN_DOWN)) {
				menustate = menu_show_version;
			} else if (BTN_PRESSED(BTN_UP)) {
				menustate = menu_show_sp;
			} else if (BTN_PRESSED(BTN_DOWN)) {
				m_countdown = 13; // 1.5 sec
				menustate = menu_show_profile;
			} else if (BTN_RELEASED(BTN_S)) {
				menustate = menu_show_menu_item;
			}
		}
		break;

	case menu_show_version:
		int_to_led(STC1000P_VERSION);
		led_10.decimal = 0;
		led_e.e_deg = 1;
		led_e.e_c = 1;
		if(!BTN_HELD(BTN_UP | BTN_DOWN)){
			menustate=menu_idle;
		}
		break;

	case menu_power_down_wait:
		if(m_countdown==0){
			unsigned char pwr_on = eeprom_read_config(EEADR_POWER_ON);
			eeprom_write_config(EEADR_POWER_ON, !pwr_on);
			if(pwr_on){
				LATA0 = 0;
				LATA4 = 0;
				LATA5 = 0;
				TMR4ON = 0;
				TMR4IF = 0;
			} else {
				heating_delay=60;
				cooling_delay=60;
				TMR4ON = 1;
			}
			menustate = menu_idle;
		} else if(!BTN_HELD(BTN_PWR)){
#if defined PB2
			TX9 = !TX9;
#endif
			menustate = menu_idle;
		}
		break;

	case menu_show_sp:
#if defined MINUTE
		temperature_to_led(setpoint);
#else
		temperature_to_led(eeprom_read_config(EEADR_MENU_ITEM(SP)));
#endif
		if(!BTN_HELD(BTN_UP)){
			menustate=menu_idle;
		}
		break;

	case menu_show_profile:
		{
			unsigned char run_mode = eeprom_read_config(EEADR_MENU_ITEM(rn));
			run_mode_to_led(run_mode);
			if(run_mode<THERMOSTAT_MODE && m_countdown==0){
				m_countdown=17;
				menustate = menu_show_profile_st;
			}
			if(!BTN_HELD(BTN_DOWN)){
				menustate=menu_idle;
			}
		}
		break;
	case menu_show_profile_st:
		int_to_led(eeprom_read_config(EEADR_MENU_ITEM(St)));
		if(m_countdown==0){
			m_countdown=13;
			menustate = menu_show_profile_dh;
		}
		if(!BTN_HELD(BTN_DOWN)){
			menustate=menu_idle;
		}
		break;
	case menu_show_profile_dh:
#if defined MINUTE
		int_to_led(curr_dur);
#else
		int_to_led(eeprom_read_config(EEADR_MENU_ITEM(dh)));
#endif
		if(m_countdown==0){
			m_countdown=13;
			menustate = menu_show_profile;
		}
		if(!BTN_HELD(BTN_DOWN)){
			menustate=menu_idle;
		}
		break;

	case menu_show_menu_item:
		menu_to_led(menu_item);
		m_countdown = 110;
		menustate = menu_set_menu_item;
		break;
	case menu_set_menu_item:
		if(m_countdown==0 || BTN_RELEASED(BTN_PWR)){
			menustate=menu_idle;
		} else if(BTN_RELEASED(BTN_UP)){
			menu_item++;
			if(menu_item > MENU_ITEM_NO){
				menu_item = 0;
			}
			menustate = menu_show_menu_item;
		} else if(BTN_RELEASED(BTN_DOWN)){
			menu_item--;
			if(menu_item > MENU_ITEM_NO){
				menu_item = MENU_ITEM_NO;
			}
			menustate = menu_show_menu_item;
		} else if(BTN_RELEASED(BTN_S)){
			config_item = 0;
			menustate = menu_show_config_item;
		}
		break;
	case menu_show_config_item:
		led_e.e_negative = 1;
		led_e.e_deg = 1;
		led_e.e_c = 1;
		if(menu_item < MENU_ITEM_NO){
			if(config_item & 0x1) {
				led_10.raw = LED_d;
				led_1.raw = LED_h;
			} else {
				led_10.raw = LED_S;
				led_1.raw = LED_P;
			}
			led_01.raw = led_lookup[(config_item >> 1)];
		} else /* if(menu_item == 6) */{
			led_10.raw = menu[config_item].led_c_10;
			led_1.raw = menu[config_item].led_c_1;
			led_01.raw = menu[config_item].led_c_01;
		}
		m_countdown = 110;
		menustate = menu_set_config_item;
		break;
	case menu_set_config_item:
		if(m_countdown==0){
			menustate=menu_idle;
		} else if(BTN_RELEASED(BTN_PWR)){
			menustate = menu_show_menu_item;
		} else if(BTN_RELEASED(BTN_UP)){
			config_item++;
			if(menu_item < MENU_ITEM_NO){
				if(config_item >= 19){
					config_item = 0;
				}
			} else {
				if(config_item >= MENU_SIZE){
					config_item = 0;
				}
				/* Jump to exit code shared with BTN_DOWN case */
				/* GOTO's are frowned upon, but avoiding code duplication saves precious code space */
				goto chk_skip_menu_item;
			}
			menustate = menu_show_config_item;
		} else if(BTN_RELEASED(BTN_DOWN)){
			config_item--;
			if(menu_item < MENU_ITEM_NO){
				if(config_item > 18){
					config_item = 18;
				}
			} else {
				if(config_item > MENU_SIZE-1){
					config_item = MENU_SIZE-1;
				}
chk_skip_menu_item:
#if !defined MINUTE
				if((unsigned char)eeprom_read_config(EEADR_MENU_ITEM(rn)) >= THERMOSTAT_MODE)
#endif
				{
					if(config_item == St){
						config_item += 2;
					}else if(config_item == dh){
						config_item -= 2;
					}
				}
			}
			menustate = menu_show_config_item;
		} else if(BTN_RELEASED(BTN_S)){
			unsigned char adr = MI_CI_TO_EEADR(menu_item, config_item);
			config_value = eeprom_read_config(adr);
			config_value = check_value(config_value, adr);
			m_countdown = 110;
			menustate = menu_show_config_value;
		}
		break;
	case menu_show_config_value:
		if(menu_item < MENU_ITEM_NO){
			if(config_item & 0x1){
				int_to_led(config_value);
			} else {
				temperature_to_led(config_value);
			}
		} else /* if(menu_item == MENU_ITEM_NO) */ {
			if(config_item <= SP){
				temperature_to_led(config_value);
			} else if (config_item < rn){
				int_to_led(config_value);
			} else {
				run_mode_to_led(config_value);
			}
		}
		m_countdown = 110;
		menustate = menu_set_config_value;
		break;
	case menu_set_config_value:
		{
			unsigned char adr = MI_CI_TO_EEADR(menu_item, config_item);

			if(m_countdown==0){
				menustate=menu_idle;
			} else if(BTN_RELEASED(BTN_PWR)){
				menustate = menu_show_config_item;
			} else if(BTN_HELD_OR_RELEASED(BTN_UP)) {
				config_value++;
				if(config_value > 1000){
					config_value+=9;
				}
				/* Jump to exit code shared with BTN_DOWN case */
				goto chk_cfg_acc_label;
			} else if(BTN_HELD_OR_RELEASED(BTN_DOWN)) {
				config_value--;
				if(config_value > 1000){
					config_value-=9;
				}
chk_cfg_acc_label:
				config_value = check_value(config_value, adr);
				if(PR6 > 30){
					PR6-=8;
				}
				menustate = menu_show_config_value;
			} else if(BTN_RELEASED(BTN_S)){
				if(menu_item == MENU_ITEM_NO){
					if(config_item == rn){
						// When setting runmode, clear current step & duration
						eeprom_write_config(EEADR_MENU_ITEM(St), 0);
#if defined MINUTE
						curr_dur = 0;
#else
						eeprom_write_config(EEADR_MENU_ITEM(dh), 0);
#endif
						if(config_value < THERMOSTAT_MODE){
							unsigned char eeadr_sp = EEADR_PROFILE_SETPOINT(((unsigned char)config_value), 0);
							// Set intial value for SP
#if defined MINUTE
							setpoint = eeprom_read_config(eeadr_sp);
							eeprom_write_config(EEADR_MENU_ITEM(SP), setpoint);
#else
							eeprom_write_config(EEADR_MENU_ITEM(SP), eeprom_read_config(eeadr_sp));
#endif
							// Hack in case inital step duration is '0'
							if(eeprom_read_config(eeadr_sp+1) == 0){
								config_value = THERMOSTAT_MODE;
							}
						}
					}
				}
				eeprom_write_config(adr, config_value);
				menustate=menu_show_config_item;
			} else {
				PR6 = 250;
			}
		}
		break;

